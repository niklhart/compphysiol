name: compphysiol release

permissions:
  checks: write
  contents: write

on: 
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  test:
    strategy: 
      fail-fast: false
      matrix: 
        MATLABVersion: [R2022b, R2023a, R2023b, R2024a, R2024b]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.MATLABVersion }}

      - name: Run tests
        uses: matlab-actions/run-command@v2
        with:
          command: addpath("buildUtilities"),testToolbox("${{ matrix.MATLABVersion }}")  
   
        # Save the contents of the report directory from each release into a single artifact.
      - name: Save Report Directory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports-${{ matrix.MATLABVersion }}
          path: reports/${{ matrix.MATLABVersion }}


  # Report on what releases tested successfully.
  # Generate a draft release based on the tag
  # Recreate the tag with the final version of JSON files and the ToolboxPackaging.prj
  release:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
            ref: refs/heads/master
    
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      # Copy all the reports down into the container
      - uses: actions/download-artifact@v4
        with:
          path: reports

      # Generate the JSON for the releases tested badge
      - name: Generate tested with badge
        uses: matlab-actions/run-command@v2
        with:
          command: addpath("buildUtilities"),badgesforToolbox()     

      # Debugging 
      - name: Debug JUnit Files
        run: ls -R reports/      
    
      # Publish test results from all the releases
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "reports/*/test-results.xml"

      # Package the MLTBX
      - name: Package Toolbox
        uses: matlab-actions/run-command@v2
        with:
          command: addpath("buildUtilities"),packageToolbox("specific","${{  github.ref_name }}")     

      # Save the MLTBX.
      - name: Save Packaged Toolbox
        uses: actions/upload-artifact@v4
        with:
          name: compphysiol.mltbx
          path: release/compphysiol.mltbx

      # Commit the JSON for the MATLAB releases badge and ToolboxPackaging.prj
      - name: commit changed files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        run: |
          git config user.name "${{ github.workflow }} by ${{ github.actor }}"
          git config user.email "<>"
          git commit reports/badge/tested_with.json -m "Final checkins for release ${{  github.ref_name }}"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git fetch
          git push

      # Retag the repo so that the updated files are included in the release tag
      - name: update tag
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        run: |
          git config user.name "${{ github.workflow }} by ${{ github.actor }}"
          git config user.email "<>"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git tag -d "${{ github.ref_name }}" 
          git push --delete origin ${{ github.ref_name }}
          git tag -m "Release ${{ github.ref_name }}" ${{ github.ref_name }}
          git push --tag


      # Create the release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          draft: true        
          artifacts: "release/compphysiol.mltbx"
          generateReleaseNotes: true





